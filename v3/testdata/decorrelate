exec
CREATE TABLE a (x INT, y INT)
----
table a
  x NULL
  y NULL

exec
CREATE TABLE b (x INT, z INT)
----
table b
  x NULL
  z NULL

decorrelate
SELECT * FROM a WHERE EXISTS (SELECT * FROM b WHERE a.x = b.x)
----
semi-join [out=(0,1)]
 ├── columns: a.x:0* a.y:1
 ├── equiv: (0,2)
 ├── filters
 │    └── eq [in=(0,2) type=bool]
 │         └── inputs
 │              ├── variable (a.x) [in=(0) type=int]
 │              └── variable (b.x) [in=(2) type=int]
 └── inputs
      ├── select [out=(0,1)]
      │    ├── columns: a.x:0* a.y:1
      │    ├── equiv: (0,2)
      │    └── inputs
      │         └── scan [out=(0,1)]
      │              └── columns: a.x:0 a.y:1
      └── select [out=(2,3)]
           ├── columns: b.x:2* b.z:3
           └── inputs
                └── scan [out=(2,3)]
                     └── columns: b.x:2 b.z:3

decorrelate
SELECT * FROM a WHERE EXISTS (SELECT 1 FROM b WHERE a.x = b.x)
----
semi-join [out=(0,1)]
 ├── columns: a.x:0* a.y:1
 ├── equiv: (0,2)
 ├── filters
 │    └── eq [in=(0,2) type=bool]
 │         └── inputs
 │              ├── variable (a.x) [in=(0) type=int]
 │              └── variable (b.x) [in=(2) type=int]
 └── inputs
      ├── select [out=(0,1)]
      │    ├── columns: a.x:0* a.y:1
      │    ├── equiv: (0,2)
      │    └── inputs
      │         └── scan [out=(0,1)]
      │              └── columns: a.x:0 a.y:1
      └── select [out=(2,3)]
           ├── columns: b.x:2* b.z:3
           └── inputs
                └── scan [out=(2,3)]
                     └── columns: b.x:2 b.z:3

decorrelate
SELECT * FROM a WHERE NOT EXISTS (SELECT * FROM b WHERE a.x = b.x)
----
anti-join [out=(0,1)]
 ├── columns: a.x:0* a.y:1
 ├── equiv: (0,2)
 ├── filters
 │    └── eq [in=(0,2) type=bool]
 │         └── inputs
 │              ├── variable (a.x) [in=(0) type=int]
 │              └── variable (b.x) [in=(2) type=int]
 └── inputs
      ├── select [out=(0,1)]
      │    ├── columns: a.x:0* a.y:1
      │    ├── equiv: (0,2)
      │    └── inputs
      │         └── scan [out=(0,1)]
      │              └── columns: a.x:0 a.y:1
      └── select [out=(2,3)]
           ├── columns: b.x:2* b.z:3
           └── inputs
                └── scan [out=(2,3)]
                     └── columns: b.x:2 b.z:3

decorrelate
SELECT * FROM a, (SELECT * FROM b WHERE a.x = b.x)
----
inner-join [out=(0-3)]
 ├── columns: a.x:0* a.y:1 b.x:2* b.z:3
 ├── equiv: (0,2)
 ├── filters
 │    └── eq [in=(0,2) type=bool]
 │         └── inputs
 │              ├── variable (a.x) [in=(0) type=int]
 │              └── variable (b.x) [in=(2) type=int]
 └── inputs
      ├── scan [out=(0,1)]
      │    └── columns: a.x:0 a.y:1
      └── select [out=(2,3)]
           ├── columns: b.x:2* b.z:3
           └── inputs
                └── scan [out=(2,3)]
                     └── columns: b.x:2 b.z:3

decorrelate
SELECT * FROM a, (SELECT b.x FROM b WHERE a.x = b.x)
----
project [out=(0-2)]
 ├── columns: a.x:0* a.y:1 b.x:2*
 ├── equiv: (0,2)
 └── inputs
      └── inner-join [out=(0-2)]
           ├── columns: a.x:0* a.y:1 b.x:2*
           ├── equiv: (0,2)
           ├── filters
           │    └── eq [in=(0,2) type=bool]
           │         └── inputs
           │              ├── variable (a.x) [in=(0) type=int]
           │              └── variable (b.x) [in=(2) type=int]
           └── inputs
                ├── scan [out=(0,1)]
                │    └── columns: a.x:0 a.y:1
                └── select [out=(2,3)]
                     ├── columns: b.x:2* b.z:3
                     └── inputs
                          └── scan [out=(2,3)]
                               └── columns: b.x:2 b.z:3

decorrelate
SELECT * FROM a WHERE 1000000 < (SELECT SUM(z) FROM b WHERE a.x = b.x)
----
project [out=(0,1)]
 ├── columns: a.x:0 a.y:1
 ├── equiv: (0,2)
 ├── projections
 │    ├── variable (a.x) [in=(0) type=int]
 │    └── variable (a.y) [in=(1) type=int]
 └── inputs
      └── group-by [out=(0,1,4)]
           ├── columns: a.x:0 a.y:1 .column1:4
           ├── equiv: (0,2)
           ├── groupings
           │    ├── variable (a.x) [in=(0) type=int]
           │    └── variable (a.y) [in=(1) type=int]
           ├── aggregations
           │    └── func (sum) [in=(3) type=decimal]
           │         └── inputs
           │              └── variable (b.z) [in=(3) type=int]
           └── inputs
                └── left-join [out=(0-3)]
                     ├── columns: a.x:0* a.y:1 b.x:2* b.z:3
                     ├── equiv: (0,2)
                     ├── filters
                     │    └── eq [in=(0,2) type=bool]
                     │         └── inputs
                     │              ├── variable (a.x) [in=(0) type=int]
                     │              └── variable (b.x) [in=(2) type=int]
                     └── inputs
                          ├── select [out=(0,1)]
                          │    ├── columns: a.x:0 a.y:1
                          │    ├── equiv: (0,2)
                          │    └── inputs
                          │         └── scan [out=(0,1)]
                          │              └── columns: a.x:0 a.y:1
                          └── select [out=(2,3)]
                               ├── columns: b.x:2* b.z:3
                               └── inputs
                                    └── scan [out=(2,3)]
                                         └── columns: b.x:2 b.z:3
