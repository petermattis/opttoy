exec
CREATE TABLE a (x INT, y INT)
----
table a
  x NULL
  y NULL

build
SELECT y FROM a GROUP BY x
----
project [out=(1)]
  columns: a.y:1
  projections:
    variable (a.y) [in=(1)]
  inputs:
    groupBy [out=(0,1)]
      columns: a.x:0 a.y:1
      groupings:
        variable (a.x) [in=(0)]
      inputs:
        scan [out=(0,1)]
          columns: a.x:0 a.y:1

build
SELECT y FROM a GROUP BY y, x
----
project [out=(1)]
  columns: a.y:1
  projections:
    variable (a.y) [in=(1)]
  inputs:
    groupBy [out=(0,1)]
      columns: a.x:0 a.y:1
      groupings:
        variable (a.y) [in=(1)]
        variable (a.x) [in=(0)]
      inputs:
        scan [out=(0,1)]
          columns: a.x:0 a.y:1

build
SELECT DISTINCT * FROM a
----
groupBy [out=(0,1)]
  columns: a.x:0 a.y:1
  groupings:
    variable (a.x) [in=(0)]
    variable (a.y) [in=(1)]
  inputs:
    scan [out=(0,1)]
      columns: a.x:0 a.y:1

build
SELECT COUNT(*) FROM a
----
groupBy [out=(2)]
  columns: .column1:2
  aggregations:
    func (count)
      inputs:
        const (1)
  inputs:
    scan [out=(0,1)]
      columns: a.x:0 a.y:1

build
SELECT COUNT(*) FROM a GROUP BY x
----
project [out=(2)]
  columns: .column3:2
  projections:
    variable (column3) [in=(2)]
  inputs:
    groupBy [out=(0-2)]
      columns: a.x:0 a.y:1 .column3:2
      groupings:
        variable (a.x) [in=(0)]
      aggregations:
        func (count)
          inputs:
            const (1)
      inputs:
        scan [out=(0,1)]
          columns: a.x:0 a.y:1

build
SELECT x FROM a GROUP BY x HAVING SUM(y) > 0
----
project [out=(0)]
  columns: a.x:0
  projections:
    variable (a.x) [in=(0)]
  inputs:
    select [out=(0-2)]
      columns: a.x:0 a.y:1 .column3:2*
      filters:
        comp (>) [in=(2)]
          inputs:
            variable (column3) [in=(2)]
            const (0)
      inputs:
        groupBy [out=(0-2)]
          columns: a.x:0 a.y:1 .column3:2
          groupings:
            variable (a.x) [in=(0)]
          aggregations:
            func (sum) [in=(1)]
              inputs:
                variable (a.y) [in=(1)]
          inputs:
            scan [out=(0,1)]
              columns: a.x:0 a.y:1

build
SELECT x, SUM(y) FROM a GROUP BY x HAVING SUM(y) > 0
----
project [out=(0,3)]
  columns: a.x:0 .column1:3
  projections:
    variable (a.x) [in=(0)]
    variable (column1) [in=(3)]
  inputs:
    groupBy [out=(3)]
      columns: .column1:3
      aggregations:
        func (sum) [in=(1)]
          inputs:
            variable (a.y) [in=(1)]
      inputs:
        select [out=(0-2)]
          columns: a.x:0 a.y:1 .column3:2*
          filters:
            comp (>) [in=(2)]
              inputs:
                variable (column3) [in=(2)]
                const (0)
          inputs:
            groupBy [out=(0-2)]
              columns: a.x:0 a.y:1 .column3:2
              groupings:
                variable (a.x) [in=(0)]
              aggregations:
                func (sum) [in=(1)]
                  inputs:
                    variable (a.y) [in=(1)]
              inputs:
                scan [out=(0,1)]
                  columns: a.x:0 a.y:1

# This query is artificial and is intended only to highlight that the
# two group-by expressions are placed in different groups in the memo.

prep,memo
SELECT SUM(x) FROM a GROUP BY x UNION SELECT SUM(x) FROM a WHERE y > 1 GROUP BY y
----
13: [union [6 12]]
12: [project [11 5]]
11: [groupBy [10 7 3]]
10: [select [1 9]]
9: [comp (>) [7 8]]
8: [const 1]
7: [variable a.y]
6: [project [4 5]]
5: [variable column3]
4: [groupBy [1 2 3]]
3: [func sum [2]]
2: [variable a.x]
1: [scan a]
